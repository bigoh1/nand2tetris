// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux.hdl

/** 
 * Multiplexor:
 * out = a if sel == 0
 *       b otherwise
 */

 /* It's easy to prove the following properties:
  * (1) (x ^ y) ^ z = x ^ (y ^ z)
  * (2) 1 ^ x = x
  * (3) 0 ^ x = 0
  * (4) 1 XOR x = ~x
  * (5) 0 XOR x = x
  * (6) x XOR x = 0
  *
  * Then, we can construct the following expression:
  * (sel ^ a) XOR (~sel ^ b) XOR a XOR b
  * 
  * Case when sel = 0:
  * (0 ^ a) XOR (1 ^ b) XOR a XOR b
  * ~~~~~~~ <-------------------------- = 0, see (3)
  *              ~~~~~~ <-------------- = b, see (2)
  * ~~~~~~~~~~~~~~~~~~~ <-------------- = b, see (5)
  * ~~~~~~~~~~~~~~~~~~~ ..... ~~~~~~ <- = 0, see (6)
  * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <- = a, see (5)
  *
  * In case when sel = 1 it's almost the same: `a XOR 0 XOR a XOR b = b`
  */
CHIP Mux {
    IN a, b, sel;
    OUT out;

    PARTS:
    And (a=a, b=sel, out=w1);
    Not (in=sel, out=notSel);
    And (a=b, b=notSel, out=w2);
    Xor (a=w1, b=w2, out=w3);
    Xor (a=w3, b=a, out=w4);
    Xor (a=w4, b=b, out=out);
}
